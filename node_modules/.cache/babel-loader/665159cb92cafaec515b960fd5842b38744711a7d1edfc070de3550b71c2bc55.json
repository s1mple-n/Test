{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\netflix-hareesh\\\\src\\\\Row.js\",\n  _s = $RefreshSig$();\nimport axios from './axios';\nimport React, { useState, useEffect } from 'react';\nimport \"./Row.css\";\nimport YouTube from 'react-youtube';\nimport movieTrailer from \"movie-trailer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Row({\n  title,\n  fetchURL,\n  isLarger\n}) {\n  _s();\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\n  const [movies, setMovies] = useState([]);\n  const [trailerURL, setTrailerURL] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchURL);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchURL]);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n  const handleClick = movie => {\n    if (trailerURL) {\n      setTrailerURL(\"\");\n    } else {\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.name) || \"\").then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        setTrailerURL(urlParams.get('v'));\n      }).catch(error => console.log(error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleClick(movie),\n        className: `row__poster ${isLarger && \"row__posterLarger\"}`,\n        src: `${base_url}${isLarger ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), trailerURL && /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: trailerURL,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(Row, \"nyyF1Xknyh/G+RWuEUTsZkVYOyg=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["axios","React","useState","useEffect","YouTube","movieTrailer","jsxDEV","_jsxDEV","Row","title","fetchURL","isLarger","_s","base_url","movies","setMovies","trailerURL","setTrailerURL","fetchData","request","get","data","results","opts","height","width","playerVars","autoplay","handleClick","movie","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","src","poster_path","backdrop_path","alt","id","videoId","_c","$RefreshReg$"],"sources":["D:/code/netflix-hareesh/src/Row.js"],"sourcesContent":["import axios from './axios';\r\nimport React, {useState,useEffect} from 'react'\r\nimport \"./Row.css\";\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nfunction Row( { title, fetchURL,isLarger } ) {\r\n\r\n    const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n    const [movies , setMovies] = useState([]);\r\n\r\n    const [trailerURL , setTrailerURL] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchURL);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    },[fetchURL]);\r\n\r\n    const opts = {\r\n        height: '390',\r\n        width: '100%',\r\n        playerVars: {\r\n          // https://developers.google.com/youtube/player_parameters\r\n          autoplay: 1,\r\n        },\r\n      };\r\n    const handleClick = (movie) => {\r\n        if (trailerURL) {\r\n            setTrailerURL(\"\");\r\n          } else {\r\n            movieTrailer( movie?.name || \"\")\r\n            .then((url)=>{\r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                setTrailerURL(urlParams.get('v'));\r\n            })\r\n            .catch((error)=>console.log(error));\r\n          }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2> { title } </h2>\r\n            <div className=\"row__posters\">\r\n                {\r\n                    movies.map(movie => (\r\n                        <img\r\n                        onClick={()=>handleClick(movie)}\r\n                        key={movie.id} className={`row__poster ${isLarger && \"row__posterLarger\"}`} src={`${base_url}${isLarger ? movie.poster_path : movie.backdrop_path}`} alt={movie.name}/>\r\n                    ))\r\n                }\r\n            </div>\r\n            {trailerURL && <YouTube videoId={trailerURL} opts={opts}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}